syntax = "proto3";

package prunner;

option go_package = "github.com/kiakeshmiri/process-runner/internal/prunner";

service ProcessService {
  rpc Start(StartProcessRequest) returns (StartProcessResponse) {}
  rpc Stop(StopProcessRequest) returns (StopProcessResponse) {}
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse) {}
  rpc GetLogs(GetLogsRequest) returns (stream GetLogsResponse) {}
}

message StartProcessRequest {
  string job = 1;
  repeated string args = 2;
  string caller = 3;
}

message StartProcessResponse {
  Status status = 1;
  string uuid = 2;
}

message StopProcessRequest {
  string uuid = 1;
  string caller = 2;
}

message StopProcessResponse {
  string err_status = 1;
}

message GetStatusRequest {
  string uuid = 1;
  string caller = 2;
}

message GetStatusResponse {
  Status status = 1;
  string caller = 2; // The user who started the process
}

message GetLogsRequest {
  string uuid = 1;
  string caller = 2;
}

message GetLogsResponse {
  bytes log = 1;
}

enum Status {
  RUNNING = 0;
  STOPPED = 1;
  CRASHED = 2;
  EXITEDWITHERROR = 3;
  COMPLETED = 4;
}
